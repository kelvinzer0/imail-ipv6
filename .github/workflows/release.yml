name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Before Build Steps
        run: |
          find . -name ".DS_Store" -print -delete
          rm -rf logs/run_away.log
          gofmt -w ./
          go generate internal/assets/conf/conf.go
          go generate internal/assets/public/public.go
          go generate internal/assets/templates/templates.go

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build for Linux ARM64
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s/^refs\/tags\/v//")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o imail .
          tar -czvf imail_${VERSION}_linux_arm64.tar.gz imail conf scripts LICENSE README.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./imail_${{ env.VERSION }}_linux_arm64.tar.gz
          asset_name: imail_${{ env.VERSION }}_linux_arm64.tar.gz
          asset_content_type: application/gzip
